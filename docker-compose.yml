version: '3.7'
services:
  web:
    image: ${WEB_IMAGE}
    environment: &BASE-ENV
      RAILS_ENV: production
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      DB_PASSWORD: ${DB_PASSWORD}
      ENCRYPTION_SECRET: ${ENCRYPTION_SECRET}
      SIGNING_SECRET: ${SIGNING_SECRET}
      PUBLIC_DOMAIN: ${PUBLIC_DOMAIN}
      RCE_HOST: ${RCE_HOST}
      ENABLE_HTTPS: ${ENABLE_HTTPS}
      # VIRTUAL_HOST: canvas.docker
    volumes: &BASE-VOLUMES
      - ./canvas-lms/config:/usr/src/app/config
      - brandable_css:/usr/src/app/public/dist/brandable_css
      - assets:/usr/src/app/public/assets
      - stylesheets:/usr/src/app/app/stylesheets
      - log:/usr/src/app/log
      - quizzes_tmp:/usr/src/app/client_apps/canvas_quizzes/tmp
      - reports:/usr/src/app/reports
      - tmp:/usr/src/app/tmp
      - upload:/usr/src/app/upload
    ports:
      - "${WEB_PORT}:80"
    restart: unless-stopped
    logging: &LOGGING
      ## limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    depends_on: &BASE-DEPENDS
      - postgres
      - redis
      - cassandra

  jobs:
    image: ${WEB_IMAGE}
    command: bundle exec script/delayed_job run
    environment: *BASE-ENV
    volumes: *BASE-VOLUMES
    restart: unless-stopped
    logging: *LOGGING
    depends_on: *BASE-DEPENDS

  postgres:
    image: "${POSTGRES_IMAGE}"
    command: "postgres ${POSTGRES_ARGS}"
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    logging: *LOGGING

  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    restart: unless-stopped
    logging: *LOGGING

  rce-api:
    image: ${RCE_IMAGE}
    environment:
      NODE_ENV: production
      STATSD_HOST: 127.0.0.1
      STATSD_PORT: 8125
      ECOSYSTEM_KEY: "${ENCRYPTION_SECRET}"
      ECOSYSTEM_SECRET: "${SIGNING_SECRET}"
      YOUTUBE_API_KEY: "${YOUTUBE_API_KEY}"
      PORT: ${RCE_PORT}
      # VIRTUAL_HOST: rce.docker
      HTTP_PROTOCOL_OVERRIDE: ${HTTP_PROTOCOL_OVERRIDE:-https}
    ports:
      - "${RCE_PORT}:80"

  cassandra:
    image: 'bitnami/cassandra:3.11.10'
    environment:
      CASSANDRA_AUTHENTICATOR: AllowAllAuthenticator
      CASSANDRA_AUTHORIZER: AllowAllAuthorizer
      MAX_HEAP_SIZE: ${CASSANDRA_MAX_HEAP_SIZE}
      HEAP_NEWSIZE: ${CASSANDRA_HEAP_NEWSIZE}
    volumes:
      - cassandra_data:/bitnami

volumes:
  brandable_css: {}
  assets: {}
  stylesheets: {}
  upload: {}
  log: {}
  quizzes_tmp: {}
  pg_data: {}
  tmp: {}
  reports: {}
  redis: {}
  cassandra_data: {}
